

# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

orbs:
  python: circleci/python@1.2

commands:
  setup_dependencies:
    description: "Install depenencies"
    parameters:
      after-deps:
        description: "Install dependenceis"
        type: steps
        default: []
    steps:
      - run:
          name: "Install open JDK"
          command: sudo add-apt-repository -y ppa:openjdk-r/ppa
      - run:
          name: "Install qq"
          command: sudo apt-get -qq update
      - run:
          name: "No install recommends for JDK"
          command: sudo apt-get install -y openjdk-8-jdk --no-install-recommends
      - run:
          name: "Run Java Alternatives install for JDK"
          command: sudo update-java-alternatives -s java-1.8.0-openjdk-amd64
      - run:
          name: "Run pip install setup tools and wheel"
          command: pip install -U pip setuptools wheel
      - run:
          name: "Install Tox"
          command: pip install -U tox==3.12.0
      - run:
          name: "Install Code Cov"
          command: pip install -U codecov
      - steps: << parameters.after-deps >>

# We want to make sure we run this only on main branch, release, or when we make tags
run_complex: &run_complex
  filters:
    branches:
      only:
        - main
        - /release-v.*/
    tags:
      only: /.*/

jobs:
  Python311-Unit-Tests:
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: coverage,doctest,type,check
      TOX_INSTALL_DIR: .env
      JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python

    steps:
      - checkout
      - setup_dependencies
      - run:
          name: "Run Tox"
          command:  tox

  Python311-Integration-Tests:
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: complex,type,check
      TOX_INSTALL_DIR: .env
      JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64

    steps:
      - checkout
      - run:
          name: Setup python3
          command: |
            pyenv global 3.11.3 > /dev/null && activated=0 || activated=1
            if [[ $activated -ne 0 ]]; then
              for i in {1..6}; do
                pyenv install 3.11.3 && break || sleep $((2 ** $i))
              done
              pyenv global 3.11.3
            fi
      - setup_dependencies
      - run:
          name: "Run Tox"
          no_output_timeout: 60m
          command: |
            export PYTHONUNBUFFERED=1
            tox

workflows:
  version: 2

  Integration-Tests:
    jobs:
      - Python311-Integration-Tests:
          <<: *run_complex
  Unit-Tests:
    jobs:
      - Python311-Unit-Tests
